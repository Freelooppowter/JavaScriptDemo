<!DOCTYPE html>
<html>
<body>
<h2>JavaScript typeof 运算符</h2>
JavaScript 数据类型<br>
JavaScript 中有五种可包含值的数据类型：<br>
字符串（string）<br>
数字（number）<br>
布尔（boolean）<br>
对象（object）<br>
函数（function）<br>
有三种对象类型：<br>
对象（Object）<br>
日期（Date）<br>
数组（Array）<br>


    
<p>typeof 运算符返回变量、对象、函数或表达式的类型。</p>

<p id="demo"></p>

<script>

document.getElementById("demo").innerHTML = 
  typeof "john" + "<br>" +
  typeof 3.14 + "<br>" +
  typeof NaN + "<br>" +
  typeof false + "<br>" +
  typeof [1,2,3,4] + "<br>" +
  typeof {name:'john', age:34} + "<br>" +
  typeof new Date() + "<br>" +
  typeof function () {} + "<br>" +
  typeof myCar + "<br>" +
  typeof null;
  /*请注意：
    NaN 的数据类型是数值
    数组的数据类型是对象
    日期的数据类型是对象
    null 的数据类型是对象
    未定义变量的数据类型是 undefined
    尚未赋值的变量的数据类型也是 undefined
    您无法使用 typeof 去判断 JavaScript 对象是否是数组（或日期）。
    
    typeof 运算符不是变量。它属于运算符。运算符（比如 + - * /）没有数据类型。
    但是，typeof 始终会返回字符串（包含运算数的类型）。
  */
</script>

</body>
</html>
